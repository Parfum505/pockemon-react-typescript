{"version":3,"sources":["components/searchForm/customButton/custom-button.styles.ts","components/searchForm/customButton/custom-button.tsx","components/searchForm/search-form.styles.ts","components/searchForm/autocomplete/autocomplete.styles.ts","components/searchForm/autocomplete/autocomplete.tsx","components/searchForm/search-form.tsx","redux/actions/pokemons-all-names.action.ts","redux/actionTypes/pokemon.action.type.ts","components/pokemonDetails/pokemon-details.styles.ts","components/pokemonDetails/pokemon-details.tsx","redux/actions/pokemon.action.ts","components/pokemonList/pokemon-list.styles.ts","components/pokemonList/pokemon-list.tsx","redux/actions/pokemon-list.action.ts","redux/actionTypes/pokemon-list.action.type.ts","App.tsx","redux/reducers/pokemon.reducer.ts","redux/reducers/pokemons-all-names.reducer.ts","redux/reducers/pokemon-list.reducer.ts","redux/reducers/root.reducer.ts","redux/store/store.ts","index.tsx"],"names":["Button","styled","input","CustomButton","value","addClasses","btnType","clickHandler","isDisabled","allClasses","length","concat","className","join","type","onClick","disabled","Title","h1","Form","form","Container","div","List","ul","Item","li","Input","AutoComplete","suggestionsListComponent","suggestions","inputValue","setInputValue","useState","showSuggestions","setShowSuggestions","filteredSuggestions","setFilteredSuggestions","activeSuggestion","setActiveSuggestion","e","currentTarget","innerText","map","suggestion","index","classActive","key","onChange","target","filtered","filter","startsWith","trim","toLowerCase","onKeyDown","keyCode","prev","placeholder","React","memo","withRouter","userInput","setUserInput","dispatch","useDispatch","pokemonsNames","useSelector","state","pokemonsAllNames","pokemons","useEffect","a","axios","get","res","result","data","results","pokemonsList","reduce","arr","item","push","name","sort","payload","console","log","message","history","useHistory","onSubmit","event","preventDefault","pokemonName","PokemonCard","PokemonContainer","PokemonDetails","useParams","pokemonState","pokemon","noPokemonInfo","loading","error","sprites","front_default","src","alt","back_default","abilities","idx","ability","PaginationContainer","ListItem","PokemonList","currentUrl","setCurrentUrl","url","urls","next","previous","current","tempArr","split","id","onClickPagination","to","App","basename","path","component","exact","defaultState","pokemonReducer","action","pokemonsAllNamesReducer","pokemonsListReducer","newUrls","rootReducer","combineReducers","Store","createStore","RootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.86ad82a2.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Button = styled.input`\r\n  padding: 11px;\r\n  background-color: dodgerblue;\r\n  border: 1px solid #ddd;\r\n  color: white;\r\n  cursor: pointer;\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    background-color: royalblue;\r\n  }\r\n  &:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Button } from \"./custom-button.styles\";\r\ninterface ICustomButtonProps {\r\n  value: string;\r\n  btnType: \"button\" | \"submit\" | \"reset\";\r\n  isDisabled?: boolean;\r\n  clickHandler?: () => void;\r\n  addClasses?: string[];\r\n}\r\nconst CustomButton: React.FC<ICustomButtonProps> = ({\r\n  value,\r\n  addClasses,\r\n  btnType,\r\n  clickHandler,\r\n  isDisabled,\r\n}) => {\r\n  let allClasses = [\"btn\"];\r\n  if (addClasses?.length) {\r\n    allClasses = allClasses.concat(addClasses);\r\n  }\r\n  return (\r\n    <Button\r\n      className={allClasses.join(\" \")}\r\n      type={btnType}\r\n      onClick={clickHandler}\r\n      disabled={isDisabled}\r\n      value={value}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n    margin: 5px 10px 15px 0;\r\n    width: 100%;\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 15px;\r\n    width: 90%;\r\n    max-width: 300px;\r\n    margin: 0 auto 30px;\r\n    text-align: left;\r\n    align-items: center;\r\n}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  flex: 1;\r\n  position: relative;\r\n`;\r\nexport const List = styled.ul`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 37px;\r\n  background: white;\r\n  border: 1px solid dodgerblue;\r\n  border-top-width: 0;\r\n  list-style: none;\r\n  margin: 0;\r\n  max-height: 150px;\r\n  overflow-y: auto;\r\n  padding-left: 0;\r\n  width: 100%;\r\n  &.no-suggestions {\r\n    color: #999;\r\n  }\r\n`;\r\nexport const Item = styled.li`\r\n  padding: 0.5rem;\r\n  &:not(:last-of-type) {\r\n    border-bottom: 1px solid dodgerblue;\r\n  }\r\n  &.active,\r\n  &:hover {\r\n    background-color: dodgerblue;\r\n    color: white;\r\n    cursor: pointer;\r\n    font-weight: 700;\r\n  }\r\n`;\r\nexport const Input = styled.input`\r\nvertical-align: middle;\r\npadding: 10px;\r\nbackground-color: #fff;\r\nborder: 1px solid #ddd;\r\nborder-radius: 0;\r\nwidth: 100%;\r\nborder-right: 0;\r\n&:focus {\r\n    border-color: dodgerblue;\r\n    outline: none;\r\n}\r\n}\r\n`;\r\n","import React, { ChangeEvent, MouseEvent, useState, KeyboardEvent } from \"react\";\r\nimport { Container, Input, List, Item } from \"./autocomplete.styles\";\r\n\r\ninterface IAutoCompleteProps {\r\n  suggestions: string[];\r\n  inputValue: string;\r\n  setInputValue: (value: string) => void;\r\n}\r\nconst AutoComplete: React.FC<IAutoCompleteProps> = ({\r\n  suggestions,\r\n  inputValue,\r\n  setInputValue,\r\n}) => {\r\n  const [showSuggestions, setShowSuggestions] = useState<boolean>(false);\r\n  const [filteredSuggestions, setFilteredSuggestions] = useState<string[]>([]);\r\n  const [activeSuggestion, setActiveSuggestion] = useState<number>(0);\r\n\r\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(e.target.value);\r\n    const filtered = suggestions.filter((suggestion) =>\r\n      suggestion.startsWith(e.target.value.trim().toLowerCase())\r\n    );\r\n    setFilteredSuggestions(filtered);\r\n    setShowSuggestions(true);\r\n    setActiveSuggestion(0);\r\n  };\r\n  const onClick = (e: MouseEvent<HTMLElement>) => {\r\n    setShowSuggestions(false);\r\n    setInputValue(e.currentTarget.innerText);\r\n    setFilteredSuggestions([]);\r\n  };\r\n  const onKeyDown = (e: KeyboardEvent<HTMLElement>) => {\r\n    if (e.keyCode === 13) {\r\n      setShowSuggestions(false);\r\n      setInputValue(filteredSuggestions[activeSuggestion]);\r\n    } else if (e.keyCode === 38) {\r\n      if (activeSuggestion !== 0) {\r\n        setActiveSuggestion((prev) => prev - 1);\r\n      }\r\n    } else if (e.keyCode === 40) {\r\n      if (activeSuggestion !== filteredSuggestions.length - 1) {\r\n        setActiveSuggestion((prev) => prev + 1);\r\n      }\r\n    }\r\n  };\r\n  let suggestionsListComponent;\r\n  if (showSuggestions && inputValue) {\r\n    if (filteredSuggestions.length) {\r\n      suggestionsListComponent = (\r\n        <List>\r\n          {filteredSuggestions.map((suggestion, index) => {\r\n            const classActive = index === activeSuggestion ? \"active\" : \"\";\r\n            return (\r\n              <Item className={classActive} key={suggestion} onClick={onClick}>\r\n                {suggestion}\r\n              </Item>\r\n            );\r\n          })}\r\n        </List>\r\n      );\r\n    } else {\r\n      suggestionsListComponent = (\r\n        <List className=\"no-suggestions\">\r\n          <Item className=\"\">No suggestions, you're on your own!</Item>\r\n        </List>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <Input\r\n        type=\"text\"\r\n        onChange={onChangeHandler}\r\n        onKeyDown={onKeyDown}\r\n        value={inputValue}\r\n        placeholder=\"Type Pokemon name\"\r\n      />\r\n      {suggestionsListComponent}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n","import React, { FormEvent, useState, useEffect } from \"react\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\nimport CustomButton from \"./customButton/custom-button\";\r\nimport { Form, Title } from \"./search-form.styles\";\r\nimport AutoComplete from \"./autocomplete/autocomplete\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../redux/store/store\";\r\nimport { getAllPockemonsNames } from \"../../redux/actions/pokemons-all-names.action\";\r\n\r\nconst SearchForm: React.FC = () => {\r\n  const [userInput, setUserInput] = useState<string>(\"\");\r\n  const dispatch = useDispatch();\r\n  const pokemonsAllState = useSelector((state: RootStore) => state.pokemonsAllNames);\r\n  const pokemonsNames = pokemonsAllState.pokemons;\r\n\r\n  useEffect(() => {\r\n    if (!pokemonsNames?.length) {\r\n      dispatch(getAllPockemonsNames());\r\n    }\r\n  }, [dispatch, pokemonsNames]);\r\n\r\n  const history = useHistory();\r\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const pokemonName: string = userInput.trim();\r\n\r\n    if (pokemonName) {\r\n      setUserInput(\"\");\r\n      history.push(`/${pokemonName}`);\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Title>Find your pokemon:</Title>\r\n      <AutoComplete\r\n        suggestions={pokemonsNames}\r\n        inputValue={userInput}\r\n        setInputValue={setUserInput}\r\n      />\r\n      <CustomButton btnType=\"submit\" value=\"Search\" />\r\n    </Form>\r\n  );\r\n};\r\nexport default React.memo(withRouter(SearchForm));\r\n","import { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AllPokemonsNamesDispatchType,\r\n  ALL_POKEMONS_NAMES_FETCHING_SUCCESS,\r\n} from \"../actionTypes/pokemon.action.type\";\r\nexport const getAllPockemonsNames = () => async (\r\n    dispatch: Dispatch<AllPokemonsNamesDispatchType>\r\n  ) => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"https://pokeapi.co/api/v2/pokemon/?limit=2000\"\r\n      );\r\n      const result = res.data.results;\r\n      const pokemonsList = result\r\n        .reduce((arr: string[], item: { name: string }) => {\r\n          arr.push(item.name.toLowerCase());\r\n          return arr;\r\n        }, [])\r\n        .sort();\r\n      dispatch({\r\n        type: ALL_POKEMONS_NAMES_FETCHING_SUCCESS,\r\n        payload: pokemonsList,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };","export const POKEMON_FETCHING_START = \"POKEMON_FETCHING_START\";\r\nexport const POKEMON_FETCHING_SUCCESS = \"POKEMON_FETCHING_SUCCESS\";\r\nexport const ALL_POKEMONS_NAMES_FETCHING_SUCCESS =\r\n  \"ALL_POKEMONS_NAMES_FETCHING_SUCCESS\";\r\nexport const POKEMON_FETCHING_ERROR = \"POKEMON_FETCHING_ERROR\";\r\n\r\ntype PokemonAbility = {\r\n  ability: {\r\n    name: string;\r\n  };\r\n};\r\ntype PokemonSprites = {\r\n  front_default: string;\r\n  back_default: string;\r\n};\r\n\r\nexport type Pokemon = {\r\n  name: string;\r\n  abilities: PokemonAbility[];\r\n  sprites: PokemonSprites;\r\n};\r\n\r\ninterface PokemonFetchingStart {\r\n  type: typeof POKEMON_FETCHING_START;\r\n}\r\ninterface PokemonFetchingSuccess {\r\n  type: typeof POKEMON_FETCHING_SUCCESS;\r\n  payload: Pokemon;\r\n}\r\ninterface AllPokemonsNamesFetchingSuccess {\r\n  type: typeof ALL_POKEMONS_NAMES_FETCHING_SUCCESS;\r\n  payload: string[];\r\n}\r\ninterface PokemonFetchingError {\r\n  type: typeof POKEMON_FETCHING_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type PokemonDispatchType =\r\n  | PokemonFetchingStart\r\n  | PokemonFetchingSuccess\r\n  | PokemonFetchingError;\r\n\r\nexport type AllPokemonsNamesDispatchType = AllPokemonsNamesFetchingSuccess;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PokemonCard = styled.div`\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0 0 1rem 0;\r\n    li {\r\n      padding: 5px;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\nexport const PokemonContainer = styled.div`\r\n  background-color: white;\r\n  width: 90%;\r\n  max-width: 270px;\r\n  text-align: left;\r\n  margin: 0 auto;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../redux/store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getPockemonByName } from \"../../redux/actions/pokemon.action\";\r\nimport SearchForm from \"../searchForm/search-form\";\r\nimport { PokemonContainer, PokemonCard } from \"./pokemon-details.styles\";\r\nimport CustomButton from \"../searchForm/customButton/custom-button\";\r\nconst PokemonDetails: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useParams();\r\n  const history = useHistory();\r\n  const pokemonState = useSelector((state: RootStore) => state.pokemon);\r\n\r\n  useEffect(() => {\r\n    if (name) {\r\n      dispatch(getPockemonByName(name));\r\n    }\r\n  }, [name, dispatch]);\r\n  const handelClickBtn = (): void => {\r\n    history.push(\"/\");\r\n  };\r\n  let noPokemonInfo = null;\r\n  if (pokemonState.loading) {\r\n    noPokemonInfo = <p>Loading...</p>;\r\n  } else if (pokemonState.error) {\r\n    noPokemonInfo = <p>{pokemonState.error}</p>;\r\n  }\r\n  return (\r\n    <>\r\n      <SearchForm />\r\n      <PokemonContainer>\r\n        {noPokemonInfo\r\n          ? noPokemonInfo\r\n          : pokemonState.pokemon && (\r\n              <PokemonCard>\r\n                <h2>Name: {pokemonState.pokemon.name}</h2>\r\n                {pokemonState.pokemon.sprites.front_default && (\r\n                  <img\r\n                    src={pokemonState.pokemon.sprites.front_default}\r\n                    alt=\"icon\"\r\n                  />\r\n                )}\r\n\r\n                {pokemonState.pokemon.sprites.back_default && (\r\n                  <img\r\n                    src={pokemonState.pokemon.sprites.back_default}\r\n                    alt=\"icon\"\r\n                  />\r\n                )}\r\n                <h3>Abilities:</h3>\r\n                <ul>\r\n                  {pokemonState.pokemon.abilities.map((item, idx) => (\r\n                    <li key={idx}>{item.ability.name}</li>\r\n                  ))}\r\n                </ul>\r\n              </PokemonCard>\r\n            )}\r\n        <CustomButton\r\n          btnType=\"button\"\r\n          clickHandler={handelClickBtn}\r\n          value=\"Back to the list\"\r\n        />\r\n      </PokemonContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonDetails;\r\n","import { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  PokemonDispatchType,\r\n  POKEMON_FETCHING_START,\r\n  POKEMON_FETCHING_ERROR,\r\n  POKEMON_FETCHING_SUCCESS,\r\n} from \"../actionTypes/pokemon.action.type\";\r\n\r\nexport const getPockemonByName = (pokemonName: string) => async (\r\n  dispatch: Dispatch<PokemonDispatchType>\r\n) => {\r\n  try {\r\n    dispatch({ type: POKEMON_FETCHING_START });\r\n    const res = await axios.get(\r\n      `https://pokeapi.co/api/v2/pokemon/${pokemonName}`\r\n    );\r\n    dispatch({\r\n      type: POKEMON_FETCHING_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: POKEMON_FETCHING_ERROR, payload: error.message });\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const PaginationContainer = styled.div`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n`;\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n`;\r\nexport const ListItem = styled.li`\r\n  margin: 8px;\r\n  text-align: center;\r\n  box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s;\r\n  &:hover {\r\n    box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.3);\r\n  }\r\n  h4 {\r\n    margin: 10px 0 0;\r\n    padding: 5px;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: brack;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchForm from \"../searchForm/search-form\";\r\nimport CustomButton from \"../searchForm/customButton/custom-button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../redux/store/store\";\r\nimport { getPockemonsList } from \"../../redux/actions/pokemon-list.action\";\r\nimport { PaginationContainer, List, ListItem } from \"./pokemon-list.styles\";\r\n\r\nconst defaultUrl = \"https://pokeapi.co/api/v2/pokemon?offset=0&limit=20\";\r\n\r\nconst PokemonList: React.FC = () => {\r\n  const [currentUrl, setCurrentUrl] = useState<string>(null!);\r\n  const dispatch = useDispatch();\r\n  const pokemonsList = useSelector((state: RootStore) => state.pokemonsList);\r\n  const pokemons = pokemonsList.pokemons;\r\n\r\n  useEffect(() => {\r\n    if (!pokemons.length) {\r\n      setCurrentUrl(defaultUrl);\r\n    }\r\n  }, [pokemons]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPockemonsList(currentUrl));\r\n  }, [dispatch, currentUrl]);\r\n\r\n  // const loadFirstPage = () => {\r\n  //   dispatch(setCurrentUrl(defaultUrl));\r\n  // };\r\n  const onClickPagination = (url: string | null) => {\r\n    if (url) {\r\n      setCurrentUrl(url);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SearchForm />\r\n      <PaginationContainer>\r\n        <p>See all pokemons</p>\r\n        <CustomButton\r\n          isDisabled={!pokemonsList.urls.previous || pokemonsList.loading}\r\n          btnType=\"button\"\r\n          value=\"Prev\"\r\n          clickHandler={() => onClickPagination(pokemonsList.urls.previous)}\r\n        />\r\n        <CustomButton\r\n          isDisabled={!pokemonsList.urls.next || pokemonsList.loading}\r\n          btnType=\"button\"\r\n          value=\"Next\"\r\n          clickHandler={() => onClickPagination(pokemonsList.urls.next)}\r\n        />\r\n      </PaginationContainer>\r\n\r\n      <List>\r\n        {pokemons &&\r\n          pokemons.map((item) => (\r\n            <ListItem key={item.id}>\r\n              <Link to={`/${item.name}`}>\r\n                <h4>{item.name}</h4>\r\n                <img\r\n                  src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${item.id}.png`}\r\n                  alt=\"icon\"\r\n                />\r\n              </Link>\r\n            </ListItem>\r\n          ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  PokemonListDispatchType,\r\n  PokemonListSetUrls,\r\n  POKEMON_LIST_FETCHING_START,\r\n  POKEMON_LIST_FETCHING_ERROR,\r\n  POKEMON_LIST_FETCHING_SUCCESS,\r\n  POKEMON_LIST_SET_URL,\r\n} from \"../actionTypes/pokemon-list.action.type\";\r\n\r\nexport const setCurrentUrl = (url: string): PokemonListSetUrls => {\r\n  return { type: POKEMON_LIST_SET_URL, payload: url };\r\n};\r\nexport const getPockemonsList = (url: string) => async (\r\n  dispatch: Dispatch<PokemonListDispatchType>\r\n) => {\r\n  try {\r\n    dispatch({ type: POKEMON_LIST_FETCHING_START });\r\n    const res = await axios.get(url);\r\n    const urls = {\r\n      next: res.data.next,\r\n      previous: res.data.previous,\r\n      current: url,\r\n    };\r\n    const pokemons = res.data.results.map(\r\n      (item: { name: string; url: string }) => {\r\n        const tempArr = item.url.split(\"/\");\r\n        const id = tempArr[tempArr.length - 2];\r\n        return { name: item.name, id };\r\n      }\r\n    );\r\n    dispatch({\r\n      type: POKEMON_LIST_FETCHING_SUCCESS,\r\n      payload: { urls, pokemons },\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: POKEMON_LIST_FETCHING_ERROR, payload: error.message });\r\n  }\r\n};\r\n","export const POKEMON_LIST_FETCHING_START = \"POKEMON_LIST_FETCHING_START\";\r\nexport const POKEMON_LIST_FETCHING_SUCCESS = \"POKEMON_LIST_FETCHING_SUCCESS\";\r\nexport const POKEMON_LIST_FETCHING_ERROR = \"POKEMON_LIST_FETCHING_ERROR\";\r\nexport const POKEMON_LIST_SET_URL = \"POKEMON_LIST_SET_URL\";\r\n\r\nexport type PaginationUrls = {\r\n  next: string | null;\r\n  previous: string | null;\r\n  current: string;\r\n};\r\nexport type PokemonListItem = {\r\n  name: string;\r\n  id: number | string;\r\n};\r\ninterface PokemonListFetchingStart {\r\n  type: typeof POKEMON_LIST_FETCHING_START;\r\n}\r\ninterface PokemonListFetchingError {\r\n  type: typeof POKEMON_LIST_FETCHING_ERROR;\r\n  payload: string;\r\n}\r\ninterface PokemonListFetchingSuccess {\r\n  type: typeof POKEMON_LIST_FETCHING_SUCCESS;\r\n  payload: { pokemons: PokemonListItem[]; urls: PaginationUrls };\r\n}\r\n\r\nexport interface PokemonListSetUrls {\r\n  type: typeof POKEMON_LIST_SET_URL;\r\n  payload: string;\r\n}\r\nexport type PokemonListDispatchType =\r\n  | PokemonListSetUrls\r\n  | PokemonListFetchingStart\r\n  | PokemonListFetchingSuccess\r\n  | PokemonListFetchingError;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport PokemonDetails from \"./components/pokemonDetails/pokemon-details\";\nimport PokemonList from \"./components/pokemonList/pokemon-list\";\n\nconst App: React.FC = () => {\n  // const pokemonState = useSelector((state: RootStore) => state.pokemon);\n  // console.log(pokemonState);\n  return (\n    <BrowserRouter basename=\"/pockemon-react-typescript\">\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/:name\" component={PokemonDetails} />\n          <Route path=\"/\" exact component={PokemonList} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import {\r\n  Pokemon,\r\n  PokemonDispatchType,\r\n  POKEMON_FETCHING_START,\r\n  POKEMON_FETCHING_ERROR,\r\n  POKEMON_FETCHING_SUCCESS,\r\n} from \"../actionTypes/pokemon.action.type\";\r\n\r\nexport interface PokemontStateI {\r\n  loading: boolean;\r\n  pokemon?: Pokemon;\r\n  error: string;\r\n}\r\nconst defaultState: PokemontStateI = {\r\n  loading: false,\r\n  error: \"\",\r\n};\r\n\r\nconst pokemonReducer = (\r\n  state: PokemontStateI = defaultState,\r\n  action: PokemonDispatchType\r\n): PokemontStateI => {\r\n  switch (action.type) {\r\n    case POKEMON_FETCHING_START:\r\n      return { ...state, loading: true, error: \"\" };\r\n    case POKEMON_FETCHING_ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case POKEMON_FETCHING_SUCCESS:\r\n      return { ...state, pokemon: action.payload, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pokemonReducer;\r\n","import {\r\n  AllPokemonsNamesDispatchType,\r\n  ALL_POKEMONS_NAMES_FETCHING_SUCCESS,\r\n} from \"../actionTypes/pokemon.action.type\";\r\n\r\nexport interface PokemonsAllStateI {\r\n  pokemons: string[];\r\n}\r\nconst defaultState: PokemonsAllStateI = {\r\n  pokemons: [],\r\n};\r\n\r\nconst pokemonsAllNamesReducer = (\r\n  state: PokemonsAllStateI = defaultState,\r\n  action: AllPokemonsNamesDispatchType\r\n): PokemonsAllStateI => {\r\n  switch (action.type) {\r\n    case ALL_POKEMONS_NAMES_FETCHING_SUCCESS:\r\n      return { ...state, pokemons: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pokemonsAllNamesReducer;\r\n","import {\r\n  PokemonListItem,\r\n  PaginationUrls,\r\n  PokemonListDispatchType,\r\n  POKEMON_LIST_FETCHING_START,\r\n  POKEMON_LIST_FETCHING_ERROR,\r\n  POKEMON_LIST_FETCHING_SUCCESS,\r\n  POKEMON_LIST_SET_URL,\r\n} from \"../actionTypes/pokemon-list.action.type\";\r\n\r\nexport interface PokemonsListStateI {\r\n  loading: boolean;\r\n  pokemons: PokemonListItem[];\r\n  error: string;\r\n  urls: PaginationUrls;\r\n}\r\nconst defaultState: PokemonsListStateI = {\r\n  loading: false,\r\n  error: \"\",\r\n  pokemons: [],\r\n  urls: {\r\n    next: null,\r\n    previous: null,\r\n    current: \"\",\r\n  },\r\n};\r\n\r\nconst pokemonsListReducer = (\r\n  state: PokemonsListStateI = defaultState,\r\n  action: PokemonListDispatchType\r\n): PokemonsListStateI => {\r\n  switch (action.type) {\r\n    case POKEMON_LIST_SET_URL: {\r\n      const newUrls = { ...state.urls, current: action.payload };\r\n      return { ...state, urls: newUrls };\r\n    }\r\n    case POKEMON_LIST_FETCHING_START:\r\n      return { ...state, loading: true, error: \"\" };\r\n    case POKEMON_LIST_FETCHING_ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case POKEMON_LIST_FETCHING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload.pokemons,\r\n        urls: action.payload.urls,\r\n        loading: false,\r\n        error: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pokemonsListReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport pokemonReducer from \"./pokemon.reducer\";\r\nimport pokemonsAllNamesReducer from \"./pokemons-all-names.reducer\";\r\nimport pokemonsListReducer from \"./pokemon-list.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  pokemon: pokemonReducer,\r\n  pokemonsAllNames: pokemonsAllNamesReducer,\r\n  pokemonsList: pokemonsListReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport RootReducer from \"../reducers/root.reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst Store = createStore(\r\n  RootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootStore = ReturnType<typeof RootReducer>;\r\nexport default Store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./redux/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}